services:
    postgres:
        container_name: postgres
        image: postgres:alpine
        restart: unless-stopped
        # user: "${UID:-1000}:${GID:-1000}"
        environment:
            TZ: "${TIMEZONE:-Europe/Warsaw}"
            POSTGRES_USER: "${DB_USER:-root}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_NAME:-default}"
        # ports:
        #     - ${DB_PORT:-5432}:5432
        networks:
            main:
        volumes:
            - postgres:/var/lib/postgresql/data
            - ./docker/postgres/bin/backup.sh:/bin/backup.sh:ro
            - ${BACKUP_DIR:-${HOME}/data/backups/docker/postgres}:/backup
        labels:
            - "deck-chores.postgres.command=/bin/backup.sh"
            - "deck-chores.postgres.cron=${BACKUP_CRON_EXPRESSION:-9,15,17,21 0 0}"
            - "traefik.enable=true"
            - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
            - "traefik.tcp.routers.postgres.rule=HostSNI(`${DOMAIN:-postgres.localhost}`)"
            - "traefik.tcp.routers.postgres.entrypoints=postgres"
            - "traefik.tcp.routers.postgres.tls=true"
            - "traefik.tcp.routers.postgres.service=postgres"

networks:
    main:
        external: true

volumes:
    postgres:
        name: postgres
